--- a/pkg_resources/_vendor/packaging/tags.py
+++ b/pkg_resources/_vendor/packaging/tags.py
@@ -4,8 +4,6 @@
 
 from __future__ import absolute_import
 
-import distutils.util
-
 try:
     from importlib.machinery import EXTENSION_SUFFIXES
 except ImportError:  # pragma: no cover
@@ -644,7 +642,7 @@ def _have_compatible_manylinux_abi(arch)
 
 def _linux_platforms(is_32bit=_32_BIT_INTERPRETER):
     # type: (bool) -> Iterator[str]
-    linux = _normalize_string(distutils.util.get_platform())
+    linux = _normalize_string(sysconfig.get_platform())
     if is_32bit:
         if linux == "linux_x86_64":
             linux = "linux_i686"
@@ -677,7 +675,7 @@ def _linux_platforms(is_32bit=_32_BIT_IN
 
 def _generic_platforms():
     # type: () -> Iterator[str]
-    yield _normalize_string(distutils.util.get_platform())
+    yield _normalize_string(sysconfig.get_platform())
 
 
 def _platform_tags():
--- a/setuptools/_vendor/packaging/tags.py
+++ b/setuptools/_vendor/packaging/tags.py
@@ -4,8 +4,6 @@
 
 from __future__ import absolute_import
 
-import distutils.util
-
 try:
     from importlib.machinery import EXTENSION_SUFFIXES
 except ImportError:  # pragma: no cover
@@ -644,7 +642,7 @@ def _have_compatible_manylinux_abi(arch)
 
 def _linux_platforms(is_32bit=_32_BIT_INTERPRETER):
     # type: (bool) -> Iterator[str]
-    linux = _normalize_string(distutils.util.get_platform())
+    linux = _normalize_string(sysconfig.get_platform())
     if is_32bit:
         if linux == "linux_x86_64":
             linux = "linux_i686"
@@ -677,7 +675,7 @@ def _linux_platforms(is_32bit=_32_BIT_IN
 
 def _generic_platforms():
     # type: () -> Iterator[str]
-    yield _normalize_string(distutils.util.get_platform())
+    yield _normalize_string(sysconfig.get_platform())
 
 
 def _platform_tags():
